{"version":3,"sources":["components/gr/gr.js","models/transition.js","models/automato.js","components/af/af.js","pages/main/main.js","components/er/er.js","index.js"],"names":["Component","Transition","from","to","symbol","Object","classCallCheck","this","Automato","states","alphabet","transitions","initial","finals","_this","fecho","fechoTransitivo","isDeterministic","_ret","newAutomato","posEpsilon","indexOf","newAlphabet","splice","_loop","i","state","split","compareTransitions","filter","transition","forEach","newTransitions","newTo","findToFecho","concat","toConsumableArray","includes","push","length","final","v","toArray","organizaOrdemStates","index","parseInt","replace","join","newTransition","organizaOrdemFecho","_this2","map","newState","stateSplit","af","props","possibleConstructorReturn","getPrototypeOf","call","handleDeterminize","setState","automato","determinize","react_default","a","createElement","onClick","className","key","value","linha","coluna","main","af_af_af","ReactDOM","render","main_main_main","document","getElementById"],"mappings":"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","file":"static/js/main.cfd56c64.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// import { Container } from './styles';\n\nexport default class gr extends Component {\n  render() {\n    return (\n        <div>GR</div>\n    )\n  }\n}\n","export default class Transition {\n    \n    constructor(from, to, symbol) {\n        this.from = from\n        this.to = to\n        this.symbol = symbol\n    }\n\n    getTransition() {\n        return [this.from,this.to,this.symbol]\n    }\n\n}","import Transition from './transition';\n\nexport default class Automato {\n    \n    constructor(states,alphabet,transitions,initial,finals) {\n        this.states = states\n        this.alphabet = alphabet\n        this.transitions = transitions\n        this.initial = initial\n        this.finals = finals\n    }\n\n    determinize() {\n        const fecho = this.fechoTransitivo()\n        // Verifica se o automato Ã© deterministico\n        if(!this.isDeterministic()) {\n            const posEpsilon = this.alphabet.indexOf('&')\n            let newAutomato\n            if(posEpsilon !== -1) {\n                let newAlphabet = this.alphabet;\n                newAlphabet.splice(posEpsilon,1)\n                newAutomato = new Automato([fecho[0]],newAlphabet,[],fecho[0],[])\n            } else {\n                newAutomato = new Automato(this.states,this.alphabet,[],this.initial,this.finals)\n            }\n                for(let i = 0; i < newAutomato.states.length; i++) {\n                    const state = newAutomato.states[i]\n                    let states = state.split(',')\n                    let compareTransitions = []\n                    compareTransitions = this.transitions.filter(transition => {\n                        return states.indexOf(transition.from) > -1 && transition.symbol !== '&'\n                    })\n                    newAutomato.alphabet.forEach(symbol => {\n                        let newTransitions = compareTransitions.filter(transition => transition.symbol === symbol)\n                        let newTo = ''\n                        newTransitions.forEach(transition => {\n                            if(newTo) newTo = newTo + ',' + transition.to\n                            else newTo = transition.to\n                        })\n                        newTo = this.findToFecho(fecho,newTo)\n                        newAutomato.transitions = [...newAutomato.transitions,new Transition(state,newTo,symbol)]\n                        if(!newAutomato.states.includes(newTo) && newTo)\n                            newAutomato.states.push(newTo)\n                    })\n                }\n                newAutomato.states.forEach(state => {\n                    newAutomato.finals.forEach(final => {\n                        if(state.includes(final) && newAutomato.finals.indexOf(state) === -1)\n                            newAutomato.finals.push(state)\n                    })\n                })\n                return newAutomato\n            }\n        }\n    findState() {\n        let state = []\n        this.transitions.forEach(transition => {\n            if(transition.to.includes(','))\n                state.push(transition.to)\n        })\n    }\n\n    findToFecho(fecho,to) {\n        let newTo = ''\n        let toArray = to.split(',')\n        toArray = this.organizaOrdemStates(toArray)\n        toArray.forEach(to => {\n            let index = parseInt(to.replace('q',''))\n            if(newTo) newTo = newTo + ',' + fecho[index]\n            else newTo = fecho[index]\n        })\n        newTo = newTo.split(',')\n        newTo = this.organizaOrdemStates(newTo)\n        newTo = newTo.join(',')\n        return newTo\n    }\n\n    isDeterministic() {\n        if(this.alphabet.indexOf('&') > -1)\n            return false\n        for(let i = 0; i < this.transitions.length - 1; ++i)\n            if(this.transitions[i].to.includes(','))\n                return false\n        return true\n    }\n\n    fechoTransitivo() {\n        let fecho = []\n        if(this.alphabet.indexOf('&') === -1) {\n            this.transitions.forEach(transition => {\n                if(fecho.indexOf(transition.from) === -1)\n                    fecho = [...fecho, transition.from]\n            })\n        } else {\n            let newTransitions = this.transitions.filter(transition => transition.symbol === '&')\n            newTransitions.forEach((transition, index) => {\n                if(transition.to.includes(transition.from)) {\n                    fecho = [...fecho, transition.to]\n                } else {\n                    let newTransition = transition.to.split(',')\n                    newTransition.splice(index,0,transition.from)\n                    fecho = [...fecho,newTransition.join(',')]\n                }\n            })\n        }\n        fecho = this.organizaOrdemFecho(fecho)\n        return fecho\n    }\n\n    organizaOrdemFecho(states) {\n        states = states.map(state => {\n            let newState = ''\n            let stateSplit = state.split(',')\n            for(let i = 0; i < this.states.length; i++) {\n                if(stateSplit.indexOf('q' + i) !== -1) {\n                    if(newState) newState = newState + ',' + stateSplit[stateSplit.indexOf('q' + i)]\n                    else newState = stateSplit[stateSplit.indexOf('q' + i)]\n                }\n            }\n            return newState\n        })\n        return states;\n    }\n    organizaOrdemStates(state) {\n        let newState = []\n        this.states.forEach((to,index) => {\n            if(state.indexOf('q' + index) !== -1) newState.push(state[state.indexOf('q' + index)])\n        })\n        return newState\n    }\n}\n","import React, { Component, Fragment } from 'react'\nimport './af.css'\nimport Automato from '../../models/automato'\nimport Transition from '../../models/transition'\nimport Swal from 'sweetalert2'\n\n\nexport default class af extends Component {\n  constructor(props) {\n    super(props)\n    const states = [ 'q0', 'q1', 'q2' ]\n    const alphabet = [ 'a', 'b', 'c', '&' ]\n    const transitions = [\n    new Transition('q0', 'q0,q1', '&'),\n    new Transition('q0', '', 'a'),\n    new Transition('q0', 'q1', 'b'),\n    new Transition('q0', 'q2', 'c'),\n    new Transition('q1', '', '&'),\n    new Transition('q1', 'q0', 'a'),\n    new Transition('q1', 'q2', 'b'),\n    new Transition('q1', 'q0,q1', 'c'),\n    new Transition('q2', '', '&'),\n    new Transition('q2', '', 'a'),\n    new Transition('q2', '', 'b'),\n    new Transition('q2', '', 'c')\n    ]\n    const start = 'q0'\n    const final = [ 'q2' ]\n    this.state = {\n      automato: new Automato(states,alphabet,transitions,start,final),\n    }\n  }\n\n  handleDeterminize = () => {\n    this.setState({automato:this.state.automato.determinize()})\n  }\n\n    render() {\n    return (\n      <div>\n        <button onClick={this.handleDeterminize}>determinize</button>\n        <div className=\"table\">\n          <div className=\"headerTable\">\n            <div className=\"cellTable\">*</div>\n            {this.state.automato.alphabet.map((symbol,key) => (\n              <input className=\"cellTable\" key={key} value={symbol}></input>\n            ))}\n          </div>\n          <div className=\"bodyTable\">\n              {this.state.automato.states.map((state,linha) => (\n                <div className=\"lineTable\" key={linha}>\n                  <div className=\"cellTable\">{state}</div>\n                  {this.state.automato.alphabet.map((symbol,coluna) => (\n                    <input className=\"cellTable\" key={coluna} value=\n                      {\n                       this.state.automato.transitions[linha*this.state.automato.alphabet.length+coluna].to\n                      }>\n                     </input>\n                  ))}\n                  </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './main.css';\n\nimport GR from '../../components/gr/gr';\nimport AF from '../../components/af/af';\nimport ER from '../../components/er/er';\n\n// import { Container } from './styles';\n\nexport default class main extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <AF/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\n// import { Container } from './styles';\n\nexport default class er extends Component {\n  render() {\n    return (\n        <div>ER</div>\n    );\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport Main from './pages/main/main'\n\nReactDOM.render(<Main/>, document.getElementById('root'))"],"sourceRoot":""}