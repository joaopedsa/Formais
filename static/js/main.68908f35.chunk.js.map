{"version":3,"sources":["components/gr/gr.js","models/transition.js","models/automato.js","components/af/af.js","components/er/er.js","pages/main/main.js","index.js"],"names":["gr","react_default","a","createElement","Component","Transition","from","to","symbol","Object","classCallCheck","this","Automato","states","alphabet","transitions","initial","finals","_this","fecho","fechoTransitivo","isDeterministic","_ret","newAutomato","posEpsilon","indexOf","newAlphabet","splice","_loop","i","state","split","compareTransitions","filter","transition","forEach","newTransitions","newTo","findToFecho","concat","toConsumableArray","includes","push","length","final","v","toArray","organizaOrdemStates","index","parseInt","replace","join","newTransition","organizaOrdemFecho","_this2","map","newState","stateSplit","lastSymbol","newSymbol","af","props","possibleConstructorReturn","getPrototypeOf","call","handleDeterminize","setState","automato","determinize","filterTransitions","handleCreateTable","asyncToGenerator","regenerator_default","mark","_callee","_ref2","size","wrap","_context","prev","next","Swal","fire","title","html","focusConfirm","preConfirm","document","getElementById","value","inputValidator","sent","createTable","stop","numStates","numInputs","j","toString","handleChangeCell","e","setTransition","target","handleFinalState","setFinalState","getAttribute","readSingleFile","file","files","reader","FileReader","onload","contents","JSON","parse","result","readAsText","writeSingleFile","Blob","stringify","type","href","URL","createObjectURL","download","click","handleChangeSymbol","_ref3","_callee2","_ref4","input","_context2","showCancelButton","setSymbol","_x","apply","arguments","className","onClick","htmlFor","id","onChange","key","linha","coluna","getTransition","er","main","handleChangeState","ef","af_af_af","gr_gr","er_er","ReactDOM","render","main_main_main"],"mappings":"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","file":"static/js/main.68908f35.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// import { Container } from './styles';\n\nexport default class gr extends Component {\n  render() {\n    return (\n        <div>GR</div>\n    )\n  }\n}\n","export default class Transition {\n    \n    constructor(from, to, symbol) {\n        this.from = from\n        this.to = to\n        this.symbol = symbol\n    }\n\n    getTransition() {\n        return [this.from,this.to,this.symbol]\n    }\n\n}","import Transition from './transition';\n\nexport default class Automato {\n    \n    constructor(states,alphabet,transitions,initial,finals) {\n        this.states = states\n        this.alphabet = alphabet\n        this.transitions = transitions\n        this.initial = initial\n        this.finals = finals\n    }\n\n    determinize() {\n        const fecho = this.fechoTransitivo()\n        // Verifica se o automato é deterministico\n        if(!this.isDeterministic()) {\n            const posEpsilon = this.alphabet.indexOf('&')\n            let newAutomato\n            if(posEpsilon !== -1) {\n                let newAlphabet = this.alphabet;\n                newAlphabet.splice(posEpsilon,1)\n                newAutomato = new Automato([fecho[0]],newAlphabet,[],fecho[0],[])\n            } else {\n                newAutomato = new Automato(this.states,this.alphabet,[],this.initial,this.finals)\n            }\n                for(let i = 0; i < newAutomato.states.length; i++) {\n                    const state = newAutomato.states[i]\n                    let states = state.split(',')\n                    let compareTransitions = []\n                    compareTransitions = this.transitions.filter(transition => {\n                        return states.indexOf(transition.from) > -1 && transition.symbol !== '&'\n                    })\n                    newAutomato.alphabet.forEach(symbol => {\n                        let newTransitions = compareTransitions.filter(transition => transition.symbol === symbol)\n                        let newTo = ''\n                        newTransitions.forEach(transition => {\n                            if(newTo) newTo = newTo + ',' + transition.to\n                            else newTo = transition.to\n                        })\n                        newTo = this.findToFecho(fecho,newTo)\n                        newAutomato.transitions = [...newAutomato.transitions,new Transition(state,newTo,symbol)]\n                        if(!newAutomato.states.includes(newTo) && newTo)\n                            newAutomato.states.push(newTo)\n                    })\n                }\n                newAutomato.states.forEach(state => {\n                    newAutomato.finals.forEach(final => {\n                        if(state.includes(final) && newAutomato.finals.indexOf(state) === -1)\n                            newAutomato.finals.push(state)\n                    })\n                })\n                return newAutomato\n            }\n            return this\n        }\n    findState() {\n        let state = []\n        this.transitions.forEach(transition => {\n            if(transition.to.includes(','))\n                state.push(transition.to)\n        })\n    }\n\n    findToFecho(fecho,to) {\n        let newTo = ''\n        let toArray = to.split(',')\n        toArray = this.organizaOrdemStates(toArray)\n        toArray.forEach(to => {\n            let index = parseInt(to.replace('q',''))\n            if(newTo) newTo = newTo + ',' + fecho[index]\n            else newTo = fecho[index]\n        })\n        newTo = newTo.split(',')\n        newTo = this.organizaOrdemStates(newTo)\n        newTo = newTo.join(',')\n        return newTo\n    }\n\n    isDeterministic() {\n        if(this.alphabet.indexOf('&') > -1)\n            return false\n        for(let i = 0; i < this.transitions.length; ++i) {\n            if(this.states.indexOf(this.transitions[i].to) === -1 && this.transitions[i].to !== '')\n                return false\n        }\n        return true\n    }\n\n    fechoTransitivo() {\n        let fecho = []\n        if(this.alphabet.indexOf('&') === -1) {\n            this.transitions.forEach(transition => {\n                if(fecho.indexOf(transition.from) === -1)\n                    fecho = [...fecho, transition.from]\n            })\n        } else {\n            let newTransitions = this.transitions.filter(transition => transition.symbol === '&')\n            newTransitions.forEach((transition, index) => {\n                if(transition.to.includes(transition.from)) {\n                    fecho = [...fecho, transition.to]\n                } else {\n                    let newTransition = transition.to.split(',')\n                    newTransition.splice(index,0,transition.from)\n                    fecho = [...fecho,newTransition.join(',')]\n                }\n            })\n        }\n        fecho = this.organizaOrdemFecho(fecho)\n        return fecho\n    }\n\n    organizaOrdemFecho(states) {\n        states = states.map(state => {\n            let newState = ''\n            let stateSplit = state.split(',')\n            for(let i = 0; i < this.states.length; i++) {\n                if(stateSplit.indexOf('q' + i) !== -1) {\n                    if(newState) newState = newState + ',' + stateSplit[stateSplit.indexOf('q' + i)]\n                    else newState = stateSplit[stateSplit.indexOf('q' + i)]\n                }\n            }\n            return newState\n        })\n        return states;\n    }\n    organizaOrdemStates(state) {\n        let newState = []\n        this.states.forEach((to,index) => {\n            if(state.indexOf('q' + index) !== -1) newState.push(state[state.indexOf('q' + index)])\n        })\n        return newState\n    }\n\n    getTransition(from, symbol) {\n        let transition = []\n        transition = this.transitions.filter(transition => transition.from === from && transition.symbol == symbol)\n        return transition[0].to\n    }\n    setTransition(from, symbol, to) {\n        let transitions = []\n        let newAutomato = new Automato(this.states,this.alphabet,[],this.initial,this.finals)\n        transitions = this.transitions.map(transition => {\n            if(transition.from !== from || transition.symbol != symbol){\n                return transition\n            }\n            else {\n                transition.to = to\n                return transition\n            }\n        })\n        newAutomato.transitions = transitions\n        return newAutomato\n    }\n    setFinalState(state) {\n        let newAutomato = new Automato(this.states,this.alphabet,this.transitions,this.initial,[])\n        if(this.finals.indexOf(state) === -1) this.finals.push(state)\n        else this.finals = this.finals.filter(final => final !== state)\n        newAutomato.finals = this.finals\n        return newAutomato;\n    }\n    setSymbol(lastSymbol, newSymbol) {\n        let transitions = []\n        let alphabet = []\n        transitions = this.transitions.map(transition => {\n            if(transition.symbol == lastSymbol) {\n                return new Transition(transition.from,transition.to,newSymbol)\n            }\n            return transition\n        })\n        alphabet = this.alphabet.map(symbol => {\n            if(symbol == lastSymbol) {\n                return newSymbol\n            } \n            return symbol\n        })\n        return new Automato(this.states,alphabet,transitions,this.initial,this.finals)\n    }\n}\n","import React, { Component } from 'react'\nimport './af.css'\nimport Automato from '../../models/automato'\nimport Transition from '../../models/transition'\nimport Swal from 'sweetalert2'\n\n\nexport default class af extends Component {\n  constructor(props) {\n    super(props)\n    const states = []\n    const alphabet = []\n    const transitions = []\n    const start = ''\n    const final = []\n    this.state = {\n      automato: new Automato(states,alphabet,transitions,start,final),\n    }\n  }\n\n  handleDeterminize = () => {\n    this.setState({automato:this.state.automato.determinize()})\n  }\n\n  filterTransitions = (state,symbol) => {\n    const newState = this.state.automato.transitions.filter(transition => transition.state === state && transition.symbol === symbol)\n    return newState\n  }\n\n  handleCreateTable = async () => {\n    let {value : size } = await Swal.fire({\n      title: 'Insira os Estados e Entradas',\n      html:\n        `\n        <div style=\"display: flex;flex-direction: row; justify-content: space-around\">\n          <input id=\"swal-input1\" max=\"20\" min=\"1\" type=\"number\" placeholder=\"Estados\" class=\"swal2-input\"> \n          <input id=\"swal-input2\" max=\"20\" min=\"1\" type=\"number\" placeholder=\"Entradas\" class=\"swal2-input\">\n        <div>\n        `,\n      focusConfirm: false,\n      preConfirm: () => {\n        return [\n          document.getElementById('swal-input1').value,\n          document.getElementById('swal-input2').value\n        ]\n      },\n      inputValidator: (value) => {\n        if (!value) {\n          return 'Insira valores corretor!'\n        }\n      }\n    })\n    if(size)\n      this.createTable(size[0],size[1])\n  }\n\n  createTable = (numStates,numInputs) => {\n    let transitions = []\n    let alphabet = []\n    let states = []\n    for(let i = 0 ; i < numStates; ++i) {\n      for(let j = 0; j < numInputs; ++j) {\n        transitions = [...transitions, new Transition('q'+ i,'',j)]\n        if(alphabet.indexOf(j.toString()) === -1)\n          alphabet.push(j.toString())\n        if(states.indexOf('q' + i) === -1)\n          states.push('q' + i)\n      }\n    }\n    let newAutomato = new Automato(states,alphabet,transitions,states[0],[])\n    this.setState({automato: newAutomato})\n  }\n\n  handleChangeCell = (e,symbol,state) => {\n    this.setState({automato: this.state.automato.setTransition(state,symbol,e.target.value)})\n  }\n  \n  handleFinalState = (e) => {\n    this.setState({automato: this.state.automato.setFinalState(e.target.getAttribute('value'))})\n  }\n\n  readSingleFile = (e) => {\n      let newAutomato = {}\n      const file = e.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const contents = JSON.parse(e.target.result)\n        newAutomato = new Automato(contents.states,contents.alphabet,contents.transitions,contents.initial,contents.finals)\n        this.setState({automato: newAutomato})\n      }\n      reader.readAsText(file)\n  }\n\n  writeSingleFile = () => {\n    if(this.state.automato) {\n      const a = document.createElement(\"a\")\n      const file = new Blob([JSON.stringify(this.state.automato)], {type: 'application/json'})\n      a.href = URL.createObjectURL(file)\n      a.download = 'automato.json'\n      a.click()\n    }\n  }\n\n  handleChangeSymbol = async (e) => {\n    const symbol = e.target.value\n    let {value: input} = await Swal.fire({\n      title: 'insira a nova Entrada',\n      input: 'text',\n      showCancelButton: true,\n      inputValidator: (value) => {\n        if (!value || (this.state.automato.alphabet.indexOf(value) !== -1) ) {\n          return 'Insira um valor para entrada ou valor que seja diferente'\n        }\n      }\n    })\n    if (input) {\n      let newAutomato = this.state.automato.setSymbol(symbol,input)\n      this.setState({automato: newAutomato})\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-buttons-menu-af\">\n          <button onClick={this.handleDeterminize}>Determinize</button>\n          <button onClick={this.handleCreateTable}>Criar Tabela de Transição</button>\n          <div>\n            <label htmlFor='selecao-arquivo'>Selecionar um arquivo</label>\n            <input id='selecao-arquivo' type=\"file\" onChange={this.readSingleFile}/>\n          </div>\n          <button onClick={this.writeSingleFile}>Exportar</button>\n        </div>\n        <div className=\"container\">\n          <div className=\"table\">\n            <div className=\"headerTable\">\n              <div className=\"cellTable\">*</div>\n              {this.state.automato.alphabet.map((symbol,key) => (\n                <input className=\"cellTable\" key={key} value={symbol} onClick={this.handleChangeSymbol}/>\n              ))}\n            </div>\n            <div className=\"bodyTable\">\n                {this.state.automato.states.map((state,linha) => (\n                  <div className=\"lineTable\" key={linha}>\n                    <div className=\"cellTable\" value={state} onClick={this.handleFinalState}>\n                    {this.state.automato.initial.indexOf(state) !== -1 ? '->' : ''}\n                    {this.state.automato.finals.indexOf(state) !== -1 ? '*' + state : state}\n                    </div>\n                    {this.state.automato.alphabet.map((symbol,coluna) => (\n                      <input className=\"cellTable\" onChange={(e) => this.handleChangeCell(e,symbol,state)}\n                       key={coluna} value={this.state.automato.getTransition(state,symbol)}/>\n                    ))}\n                    </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n/*\nSwal.fire({\n  title: 'Custom width, padding, background.',\n  width: 600,\n  padding: '3em',\n  background: '#fff url(/images/trees.png)',\n  backdrop: `\n    rgba(0,0,123,0.4)\n    url(\"/images/nyan-cat.gif\")\n    center left\n    no-repeat\n  `\n})\n*/","import React, { Component } from 'react';\n\n// import { Container } from './styles';\n\nexport default class er extends Component {\n  render() {\n    return (\n        <div>ER</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './main.css';\n\nimport GR from '../../components/gr/gr';\nimport AF from '../../components/af/af';\nimport ER from '../../components/er/er';\n\nexport default class main extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            af: true,\n            gr: false,\n            er: false\n        }\n    }\n\n    handleChangeState = (e) => {\n        if(e.target.value == 1) this.setState({af : true, gr: false, ef: false})\n        if(e.target.value == 2) this.setState({af : false, gr: true, ef: false})\n        if(e.target.value == 3) this.setState({af : false, gr: false, ef: true})\n    }\n\n\n    render() {\n\n        let state = ''\n        if(this.state.af) state = <AF/>\n        if(this.state.gr) state = <GR/>\n        if(this.state.er) state = <ER/>\n\n        return (\n            <div>\n                <div className=\"container-buttons-menu\">\n                    <button onClick={this.handleChangeState} value={1}>AUTOMATO FINITO</button>\n                    <button onClick={this.handleChangeState} value={2}>GRAMATICA REGULAR</button>\n                    <button onClick={this.handleChangeState} value={3}>EXPRESSAO REGULAR</button>\n                </div>\n                {state}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport Main from './pages/main/main'\n\nReactDOM.render(<Main/>, document.getElementById('root'))"],"sourceRoot":""}