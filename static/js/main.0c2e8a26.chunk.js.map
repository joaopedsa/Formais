{"version":3,"sources":["components/gr/gr.js","components/af/af.js","components/er/er.js","models/transition.js","models/production.js","models/regular.js","models/automato.js","models/expression.js","pages/main/main.js","index.js"],"names":["gr","writeSingleFile","_this","props","regular","a","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","_this2","this","react_default","className","onClick","main","handleCreateSentenças","transformGramaticaToAutomato","htmlFor","id","onChange","readSingleFileRegular","getTotalProduction","map","sentenca","key","value","e","handleChangeSentenca","Component","af","automato","handleDeterminize","handleCreateTable","readSingleFileAutomato","handleTransformAutomatoToRegular","alphabet","symbol","defaultValue","handleChangeSymbol","states","state","linha","handleFinalState","initial","indexOf","finals","coluna","handleChangeCell","getTransition","er","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChangeText","setState","text","target","handleChangeEr","readSingleFileExpression","files","reader","FileReader","onload","contents","parse","result","readAsText","placeholder","Transition","from","to","Production","Regular","nonTerminal","terminal","productions","forEach","nTerminal","index","filter","production","replace","transitions","newProduction","split","substring","push","newProductionOrdened","newTerminal","match","join","newAutomato","length","toSymbol","newTransitions","transition","i","_loop","j","final","achou","Automato","isDeterministic","determinize","String","fromCharCode","charCodeAt","toUpperCase","exist","fecho","fechoTransitivo","_ret","posEpsilon","newAlphabet","splice","compareTransitions","newTo","findToFecho","concat","toConsumableArray","includes","v","toArray","organizaOrdemStates","parseInt","newTransition","organizaOrdemFecho","_this3","newState","stateSplit","lastSymbol","newSymbol","Expression","expression","transformToGramatica","handlePlostTwist","Swal","fire","title","width","padding","background","backdrop","handleChangeState","filterTransitions","asyncToGenerator","regenerator_default","mark","_callee","_ref2","size","wrap","_context","prev","next","input","showCancelButton","inputValidator","sent","createSentenças","stop","_callee2","_ref4","_context2","html","focusConfirm","preConfirm","getElementById","createTable","numStates","numInputs","toString","setTransition","setFinalState","getAttribute","newRegular","_ref5","_callee3","_ref6","_context3","setSymbol","_x","apply","arguments","temp","transformRegularToAutomato","setProductions","af_af_af","gr_gr_gr","er_er_er","expressao","ReactDOM","render","main_main_main"],"mappings":"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","file":"static/js/main.0c2e8a26.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './gr.css';\n// import { Container } from './styles';\n\nexport default class gr extends Component {\n\n  writeSingleFile = () => {\n    if(this.props.regular) {\n      const a = document.createElement(\"a\")\n      const file = new Blob([JSON.stringify(this.props.regular)], {type: 'application/json'})\n      a.href = URL.createObjectURL(file)\n      a.download = 'regular.json'\n      a.click()\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"container-gr\">\n          <div className=\"container-buttons-menu-af\">\n            <button onClick={this.props.main.handleCreateSentenças}>Criar Sentença</button>\n            <button onClick={this.props.main.transformGramaticaToAutomato}>Transformar para Automato Finito</button>\n            <button onClick={this.writeSingleFile}>Exportar</button>\n            <div>\n              <label htmlFor='selecao-arquivo-regular'>Importar</label>\n              <input id='selecao-arquivo-regular' type=\"file\" onChange={this.props.main.readSingleFileRegular}/>\n            </div>\n          </div>\n          <div className=\"container-gramatica\">\n            <div>  \n              {this.props.regular.getTotalProduction().map((sentenca,key) => (\n                <div key={key} className=\"sentenca-container\">\n                  <span>{sentenca[0]} -> </span>\n                  <input className=\"sentenca\" value={sentenca[1]} onChange={(e) => this.props.main.handleChangeSentenca(e,sentenca[0])}/>\n                </div>                \n              ))}\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './af.css'\n\nexport default class af extends Component {\n\n  writeSingleFile = () => {\n    if(this.props.automato) {\n      const a = document.createElement(\"a\")\n      const file = new Blob([JSON.stringify(this.props.automato)], {type: 'application/json'})\n      a.href = URL.createObjectURL(file)\n      a.download = 'automato.json'\n      a.click()\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-buttons-menu-af\">\n          <button onClick={this.props.main.handleDeterminize}>Determinize</button>\n          <button onClick={this.props.main.handleCreateTable}>Criar Tabela de Transição</button>\n          <div>\n            <label htmlFor='selecao-arquivo'>Importar</label>\n            <input id='selecao-arquivo' type=\"file\" onChange={this.props.main.readSingleFileAutomato}/>\n          </div>\n          <button onClick={this.writeSingleFile}>Exportar</button>\n          <button onClick={this.props.main.handleTransformAutomatoToRegular}>Tranformar para GR</button>\n        </div>\n        <div className=\"container\">\n          <div className=\"table\">\n            <div className=\"headerTable\">\n              <div className=\"cellTable\">*</div>\n              {this.props.automato.alphabet.map((symbol,key) => (\n                <input className=\"cellTable\" key={key} defaultValue={symbol} onClick={this.props.main.handleChangeSymbol}/>\n              ))}\n            </div>\n            <div className=\"bodyTable\">\n                {this.props.automato.states.map((state,linha) => (\n                  <div className=\"lineTable\" key={linha}>\n                    <div className=\"cellTable\" value={state} onClick={this.props.main.handleFinalState}>\n                    {this.props.automato.initial.indexOf(state) !== -1 ? '->' : ''}\n                    {this.props.automato.finals.indexOf(state) !== -1 ? '*' + state : state}\n                    </div>\n                    {this.props.automato.alphabet.map((symbol,coluna) => (\n                      <input className=\"cellTable\" onChange={(e) => this.props.main.handleChangeCell(e,symbol,state)}\n                       key={coluna} value={this.props.automato.getTransition(state,symbol)}/>\n                    ))}\n                    </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n/*\nSwal.fire({\n  title: 'Custom width, padding, background.',\n  width: 600,\n  padding: '3em',\n  background: '#fff url(/images/trees.png)',\n  backdrop: `\n    rgba(0,0,123,0.4)\n    url(\"/images/nyan-cat.gif\")\n    center left\n    no-repeat\n  `\n})\n*/","import React, { Component } from 'react';\nimport './er.css'\n\n// import { Container } from './styles';\n\nexport default class er extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      er:'',\n      text:''\n    }\n  }\n\n  handleChangeText = (e) => {\n    this.setState({text: e.target.value})\n  }\n\n  handleChangeEr = (e) => {\n    this.setState({er: e.target.value})\n  }\n  \n  readSingleFileExpression = (e) => {\n    const file = e.target.files[0];\n    if (!file) {\n        return;\n    }\n    const reader = new FileReader();\n    reader.onload = (e) => {\n        const contents = JSON.parse(e.target.result)\n        if(contents.er) {\n            this.setState({er: contents.er})\n        }\n    }\n    reader.readAsText(file)\n  }\n\n  writeSingleFile = () => {\n    if(this.state.er) {\n      const a = document.createElement(\"a\")\n      const file = new Blob([JSON.stringify(this.state)], {type: 'application/json'})\n      a.href = URL.createObjectURL(file)\n      a.download = 'expressao.json'\n      a.click()\n    }\n  }\n\n  render() {\n    return (\n        <div>\n        <div className=\"container-buttons-menu-af\">\n          <div>\n            <label htmlFor='selecao-arquivo'>Importar</label>\n            <input id='selecao-arquivo' type=\"file\" onChange={this.readSingleFileExpression}/>\n          </div>\n          <button onClick={this.writeSingleFile}>Exportar</button>\n        </div>\n          <div className=\"container-inputs\">\n            <p>Expressão regular:</p>\n            <input onChange={this.handleChangeEr} value={this.state.er} placeholder={'aaa'}></input>\n          </div>\n        </div>\n    );\n  }\n}\n","export default class Transition {\n    \n    constructor(from, to, symbol) {\n        this.from = from\n        this.to = to\n        this.symbol = symbol\n    }\n\n    getTransition() {\n        return [this.from,this.to,this.symbol]\n    }\n\n}","export default class Production {\n\n    constructor(from, to) {\n        this.from = from\n        this.to = to\n    }\n\n    getProduction() {\n        return [this.from,this.to]\n    }\n}","import Transition from './transition'\nimport Production from './production'\n\nexport default class Regular {\n\n    constructor(nonTerminal, terminal, productions, initial) {\n        this.nonTerminal = nonTerminal\n        this.terminal = terminal\n        this.productions = productions\n        this.initial = initial\n    }\n    \n    getTotalProduction() {\n        let sentenca = []\n        this.nonTerminal.forEach((nTerminal,index) => {\n            let newProduction = this.productions.filter(production => production.from === nTerminal)\n            newProduction.forEach(production => {\n                if(sentenca[index]) sentenca[index][1] = sentenca[index][1] + '|' + production.to.replace(' ','')\n                else sentenca[index] = [nTerminal,production.to.replace(' ','')]\n            })\n        })\n        return sentenca\n    }\n\n    setProductions(from,transitions) {\n        let newProduction = this.productions.filter(production=> production.from !== from)\n        let newTransitions = transitions.split('|')\n        newTransitions.forEach(transitions => {\n            if(transitions.substring(1,2)) {\n                newProduction.push(new Production(from,transitions.substring(0,1) + ' ' + transitions.substring(1,2)))\n            } else {\n                newProduction.push(new Production(from,transitions.substring(0,1)))\n            }\n        })\n        let newProductionOrdened = []\n\n        this.nonTerminal.forEach(nTerminal => {\n            let temp = newProduction.filter(production => production.from === nTerminal)\n            temp.forEach(production => {\n                newProductionOrdened.push(production)\n            })\n        })\n        let newTerminal = []\n        newProductionOrdened.forEach(production => {\n            if(production.to && production.to.match(/[a-z]?[0-9]?/) && newTerminal.indexOf(production.to.match(/[a-z]?[0-9]?/).join()) === -1)\n                newTerminal.push(production.to.match(/[a-z]?[0-9]?/).join())\n        })\n        return new Regular(this.nonTerminal,newTerminal,newProductionOrdened,this.initial)\n    }\n\n    transformRegularToAutomato() {\n        let newAutomato = {\n            states: [],\n            alphabet: [],\n            transitions: [],\n            initial: '',\n            finals:[]\n        }\n        this.nonTerminal.forEach( (state,index) => {\n            if(newAutomato.states.length === 0) {\n                newAutomato.initial = 'q' + index\n                newAutomato.states.push('q'+ index)\n            } else {\n                newAutomato.states.push('q'+ index)\n            } \n        })\n        newAutomato.states.push('q' + newAutomato.states.length)\n        newAutomato.finals.push('q' + (newAutomato.states.length - 1))\n        newAutomato.alphabet = this.terminal\n        this.nonTerminal.forEach( (state,index) => {\n            let newProduction\n            newProduction = this.productions.filter(production => production.from === state)\n            newProduction.forEach(production => {\n                const toSymbol = production.to.split(' ')\n                const symbol = toSymbol[0]\n                let to = toSymbol[1]\n                if(to) {\n                    this.nonTerminal.forEach((state,index) => {\n                        if(to === state) to = 'q' + index\n                    })\n                }\n                newAutomato.transitions.push(new Transition('q' + index, to ? to : '', symbol))\n                newAutomato.states.forEach(state => {\n\n                    let newTransitions = newAutomato.transitions.filter(transition => transition.from === state)\n\n                    for (let i = 0; i < newTransitions.length-1 ; ++i) {\n                        for (let j = i + 1 ; j < newTransitions.length ; ++j) {\n                            if (newTransitions[i].symbol === newTransitions[j].symbol) {\n                                \n                                if (newTransitions[i].to) {\n                                    newTransitions[i].to = newTransitions[i].to + ',' + newAutomato.finals[0]\n                                }\n                                newAutomato.transitions = newAutomato.transitions.filter(transition => {\n                                    if(newTransitions[j].symbol === transition.symbol && transition.from === newTransitions[j].from && !transition.to) \n                                        return false\n                                    return true\n                                })\n                            }   \n                        }\n                    }\n                })\n            })\n        })\n        newAutomato.finals = newAutomato.finals.filter(final => final)\n        newAutomato.states.forEach(state => {\n            newAutomato.alphabet.forEach(symbol => {\n                let achou = false\n                for(let i = 0 ; i < newAutomato.transitions.length ; ++i) {\n                    if(newAutomato.transitions[i].from === state && newAutomato.transitions[i].symbol === symbol)\n                        achou = true\n                }\n                if(!achou)\n                    newAutomato.transitions.push(new Transition(state,'',symbol))\n            })  \n        })\n        newAutomato.transitions = newAutomato.transitions.filter(transition => transition.symbol)\n        return newAutomato\n    }\n}","import Transition from './transition'\nimport Production from './production'\nimport Regular from './regular'\n\nexport default class Automato {\n    \n    constructor(states,alphabet,transitions,initial,finals) {\n        this.states = states\n        this.alphabet = alphabet\n        this.transitions = transitions\n        this.initial = initial\n        this.finals = finals\n    }\n\n    transformToGramatica() {\n        let regular = new Regular(['S'],this.alphabet,[],'S')\n        if(!this.isDeterministic()) {\n            let newAutomato = this.determinize()\n            this.states = newAutomato.states\n            this.transitions = newAutomato.transitions\n            this.finals = newAutomato.finals\n        }\n        const newStates = this.states.filter(state => {\n            return state !== this.initial\n        })\n        newStates.forEach((state,index) => {\n            regular.nonTerminal.push(String.fromCharCode('a'.charCodeAt(0)+index).toUpperCase())\n        })\n        this.transitions.forEach(transition => {\n            if(transition.to)\n                if(this.finals.indexOf(transition.to) !== -1) {\n                    regular.productions.push(new Production(regular.nonTerminal[ this.states.indexOf(transition.from) ],\n                     transition.symbol +' '+ regular.nonTerminal[ this.states.indexOf(transition.to) ]))\n                    regular.productions.push(new Production(regular.nonTerminal[ this.states.indexOf(transition.from) ],\n                     transition.symbol))\n                } else {\n                    regular.productions.push(new Production(regular.nonTerminal[ this.states.indexOf(transition.from) ],\n                     transition.symbol +' '+ regular.nonTerminal[ this.states.indexOf(transition.to) ]))\n                }\n        })\n        regular.nonTerminal.forEach(nTerminal => {\n            let exist = false\n            regular.productions.forEach(production => {\n                if(production.from === nTerminal)\n                    exist = true\n            })\n            if(!exist) regular.productions.push(new Production(nTerminal,''))\n        })\n        return regular\n    }\n\n    determinize() {\n        const fecho = this.fechoTransitivo()\n        // Verifica se o automato é deterministico\n        if(!this.isDeterministic()) {\n            const posEpsilon = this.alphabet.indexOf('&')\n            let newAutomato\n            if(posEpsilon !== -1) {\n                let newAlphabet = this.alphabet;\n                newAlphabet.splice(posEpsilon,1)\n                newAutomato = new Automato([fecho[0]],newAlphabet,[],fecho[0],[])\n            } else {\n                newAutomato = new Automato(this.states,this.alphabet,[],this.initial,this.finals)\n            }\n                for(let i = 0; i < newAutomato.states.length; i++) {\n                    const state = newAutomato.states[i]\n                    let states = state.split(',')\n                    let compareTransitions = []\n                    compareTransitions = this.transitions.filter(transition => {\n                        return states.indexOf(transition.from) > -1 && transition.symbol !== '&'\n                    })\n                    newAutomato.alphabet.forEach(symbol => {\n                        let newTransitions = compareTransitions.filter(transition => transition.symbol === symbol)\n                        let newTo = ''\n                        newTransitions.forEach(transition => {\n                            if(newTo) newTo = newTo + ',' + transition.to\n                            else newTo = transition.to\n                        })\n                        newTo = this.findToFecho(fecho,newTo)\n                        newAutomato.transitions = [...newAutomato.transitions,new Transition(state,newTo,symbol)]\n                        if(!newAutomato.states.includes(newTo) && newTo)\n                            newAutomato.states.push(newTo)\n                    })\n                }\n                newAutomato.states.forEach(state => {\n                    newAutomato.finals.forEach(final => {\n                        if(state.includes(final) && newAutomato.finals.indexOf(state) === -1)\n                            newAutomato.finals.push(state)\n                    })\n                })\n                return newAutomato\n            }\n            return this\n        }\n    findState() {\n        let state = []\n        this.transitions.forEach(transition => {\n            if(transition.to.includes(','))\n                state.push(transition.to)\n        })\n    }\n\n    findToFecho(fecho,to) {\n        let newTo = ''\n        let toArray = to.split(',')\n        toArray = this.organizaOrdemStates(toArray)\n        toArray.forEach(to => {\n            let index = parseInt(to.replace('q',''))\n            if(newTo) newTo = newTo + ',' + fecho[index]\n            else newTo = fecho[index]\n        })\n        newTo = newTo.split(',')\n        newTo = this.organizaOrdemStates(newTo)\n        newTo = newTo.join(',')\n        return newTo\n    }\n\n    isDeterministic() {\n        if(this.alphabet.indexOf('&') > -1)\n            return false\n        for(let i = 0; i < this.transitions.length; ++i) {\n            if(this.states.indexOf(this.transitions[i].to) === -1 && this.transitions[i].to !== '')\n                return false\n        }\n        return true\n    }\n\n    fechoTransitivo() {\n        let fecho = []\n        if(this.alphabet.indexOf('&') === -1) {\n            this.transitions.forEach(transition => {\n                if(fecho.indexOf(transition.from) === -1)\n                    fecho = [...fecho, transition.from]\n            })\n        } else {\n            let newTransitions = this.transitions.filter(transition => transition.symbol === '&')\n            newTransitions.forEach((transition, index) => {\n                if(transition.to.includes(transition.from)) {\n                    fecho = [...fecho, transition.to]\n                } else {\n                    let newTransition = transition.to.split(',')\n                    newTransition.splice(index,0,transition.from)\n                    fecho = [...fecho,newTransition.join(',')]\n                }\n            })\n        }\n        fecho = this.organizaOrdemFecho(fecho)\n        return fecho\n    }\n\n    organizaOrdemFecho(states) {\n        states = states.map(state => {\n            let newState = ''\n            let stateSplit = state.split(',')\n            for(let i = 0; i < this.states.length; i++) {\n                if(stateSplit.indexOf('q' + i) !== -1) {\n                    if(newState) newState = newState + ',' + stateSplit[stateSplit.indexOf('q' + i)]\n                    else newState = stateSplit[stateSplit.indexOf('q' + i)]\n                }\n            }\n            return newState\n        })\n        return states;\n    }\n    organizaOrdemStates(state) {\n        let newState = []\n        this.states.forEach((to,index) => {\n            if(state.indexOf('q' + index) !== -1) newState.push(state[state.indexOf('q' + index)])\n        })\n        return newState\n    }\n\n    getTransition(from, symbol) {\n        let transition = []\n        transition = this.transitions.filter(transition => transition.from === from && transition.symbol == symbol)\n        return transition[0].to\n    }\n    setTransition(from, symbol, to) {\n        let transitions = []\n        let newAutomato = new Automato(this.states,this.alphabet,[],this.initial,this.finals)\n        transitions = this.transitions.map(transition => {\n            if(transition.from !== from || transition.symbol != symbol){\n                return transition\n            }\n            else {\n                transition.to = to\n                return transition\n            }\n        })\n        newAutomato.transitions = transitions\n        return newAutomato\n    }\n    setFinalState(state) {\n        let newAutomato = new Automato(this.states,this.alphabet,this.transitions,this.initial,[])\n        if(this.finals.indexOf(state) === -1) this.finals.push(state)\n        else this.finals = this.finals.filter(final => final !== state)\n        newAutomato.finals = this.finals\n        return newAutomato;\n    }\n    setSymbol(lastSymbol, newSymbol) {\n        let transitions = []\n        let alphabet = []\n        transitions = this.transitions.map(transition => {\n            if(transition.symbol == lastSymbol) {\n                return new Transition(transition.from,transition.to,newSymbol)\n            }\n            return transition\n        })\n        alphabet = this.alphabet.map(symbol => {\n            if(symbol == lastSymbol) {\n                return newSymbol\n            } \n            return symbol\n        })\n        return new Automato(this.states,alphabet,transitions,this.initial,this.finals)\n    }\n}\n","export default class Expression {\n    \n    constructor(expression) {\n        this.expression = expression\n    }\n    \n}","import React, { Component } from 'react';\nimport './main.css';\nimport Swal from 'sweetalert2';\n\nimport GR from '../../components/gr/gr';\nimport AF from '../../components/af/af';\nimport ER from '../../components/er/er';\nimport Automato from '../../models/automato';\nimport Regular from '../../models/regular';\nimport Transition from '../../models/transition';\nimport Expression from '../../models/expression'\nimport Production from '../../models/production';\n\nexport default class main extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            af: true,\n            gr: false,\n            er: false,\n            automato: new Automato([],[],[],'',[]),\n            regular: new Regular([],[],[],'S'),\n            expression: new Expression()\n        }\n    }\n\n    handleTransformAutomatoToRegular = () => {\n        this.setState({regular :this.state.automato.transformToGramatica(),af:false,gr:true})\n    }\n\n    handlePlostTwist= () => {\n        Swal.fire({\n          title: 'Em Desenvolvimento',\n          width: 600,\n          padding: '3em',\n          background:' rgba(0,0,123,0.05)',\n          backdrop: `\n            rgba(0,0,123,0.4)\n            url(\"https://thumbs.gfycat.com/ScaryMassiveGallowaycow-max-1mb.gif\")\n            center left\n            no-repeat\n          `,})\n    }\n    handleChangeState = (e) => {\n        if(parseInt(e.target.value) === 1) this.setState({af : true, gr: false, er: false})\n        if(parseInt(e.target.value) === 2) this.setState({af : false, gr: true, er: false})\n        if(parseInt(e.target.value) === 3) this.setState({af : false, gr: false, er: true})\n    }\n    handleDeterminize = () => {\n        this.setState({automato:this.state.automato.determinize()})\n      }\n    \n    filterTransitions = (state,symbol) => {\n        const newState = this.state.automato.transitions.filter(transition => transition.state === state && transition.symbol === symbol)\n        return newState\n    }\n\n    handleCreateSentenças = async () => {\n        let {value: size} = await Swal.fire({\n            title: 'insira número de sentenças',\n            input: 'number',\n            showCancelButton: true,\n            inputValidator: (value) => {\n            if (!value ) {\n                return 'Insira um valor para sentença'\n            }\n            }\n        })\n        if(size) {\n            this.createSentenças(size)\n        }\n    }\n\n    createSentenças = (size) => {\n        let regular = new Regular(['S'],[],[],'S')\n        regular.productions.push(new Production('S',''))\n        for(let i = 0 ; i < size-1 ; ++i) {\n            regular.nonTerminal.push(String.fromCharCode('a'.charCodeAt(0)+i).toUpperCase())\n            regular.productions.push(new Production(String.fromCharCode('a'.charCodeAt(0)+i).toUpperCase(),''))\n        }\n        this.setState({regular : regular})\n    }\n\n    handleCreateTable = async () => {\n    let {value : size } = await Swal.fire({\n        title: 'Insira os Estados e Entradas',\n        html:\n        `\n        <div style=\"display: flex;flex-direction: row; justify-content: space-around\">\n            <input id=\"swal-input1\" max=\"20\" min=\"1\" type=\"number\" placeholder=\"Estados\" class=\"swal2-input\"> \n            <input id=\"swal-input2\" max=\"20\" min=\"1\" type=\"number\" placeholder=\"Entradas\" class=\"swal2-input\">\n        <div>\n        `,\n        focusConfirm: false,\n        preConfirm: () => {\n        return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n        ]\n        },\n        inputValidator: (value) => {\n            if (!value) {\n                return 'Insira valores corretamente!'\n            }\n        }\n    })\n    if(size)\n        this.createTable(size[0],size[1])\n    }\n\n    createTable = (numStates,numInputs) => {\n        let transitions = []\n        let alphabet = []\n        let states = []\n        for(let i = 0 ; i < numStates; ++i) {\n            for(let j = 0; j < numInputs; ++j) {\n                transitions = [...transitions, new Transition('q'+ i,'',j.toString())]\n                if(alphabet.indexOf(j.toString()) === -1)\n                    alphabet.push(j.toString())\n                if(states.indexOf('q' + i) === -1)\n                    states.push('q' + i)\n            }\n        }\n    let newAutomato = new Automato(states,alphabet,transitions,states[0],[])\n        this.setState({automato: newAutomato})\n    }\n\n    handleChangeCell = (e,symbol,state) => {\n        this.setState({automato: this.state.automato.setTransition(state,symbol,e.target.value)})\n    }\n    \n    handleFinalState = (e) => {\n        this.setState({automato: this.state.automato.setFinalState(e.target.getAttribute('value'))})\n    }\n\n    readSingleFileAutomato = (e) => {\n        let newAutomato = {}\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const contents = JSON.parse(e.target.result)\n            if(contents.states) {\n                newAutomato = new Automato(contents.states,contents.alphabet,contents.transitions,contents.initial,contents.finals)\n                this.setState({automato: newAutomato})\n            }\n        }\n        reader.readAsText(file)\n    }\n\n    readSingleFileRegular = (e) => {\n        let newRegular = {}\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const contents = JSON.parse(e.target.result)\n            if(contents.nonTerminal) {\n                newRegular = new Regular(contents.nonTerminal,contents.terminal,contents.productions,contents.initial)\n                this.setState({regular: newRegular})\n            }\n        }\n        reader.readAsText(file)\n    }\n\n    handleChangeSymbol = async (e) => {\n        const symbol = e.target.value\n        let {value: input} = await Swal.fire({\n            title: 'insira a nova Entrada',\n            input: 'text',\n            showCancelButton: true,\n            inputValidator: (value) => {\n            if (!value || (this.state.automato.alphabet.indexOf(value) !== -1) ) {\n                return 'Insira um valor para entrada ou valor que seja diferente'\n            }\n            }\n        })\n        if (input) {\n            let newAutomato = this.state.automato.setSymbol(symbol,input)\n            this.setState({automato: newAutomato})\n        }\n    }\n\n    transformGramaticaToAutomato = () => {\n        let temp = this.state.regular.transformRegularToAutomato()\n        let newAutomato = new Automato(temp.states,temp.alphabet,temp.transitions,temp.initial,temp.finals)\n        this.setState({automato:newAutomato,af:true,gr:false})\n    }\n\n    handleChangeSentenca = (e,from) => {\n        this.setState({regular : this.state.regular.setProductions(from,e.target.value)})\n    }\n\n    render() {\n        let state = ''\n        if(this.state.af) state = <AF main={this} automato={this.state.automato}/>\n        if(this.state.gr) state = <GR main={this} regular={this.state.regular}/>\n        if(this.state.er) state = <ER main={this} expressao={this.state.expression}/>\n        return (\n            <div>\n                <div className=\"container-buttons-menu\">\n                    <button onClick={this.handleChangeState} value={1}>AUTOMATO FINITO</button>\n                    <button onClick={this.handleChangeState} value={2}>GRAMATICA REGULAR</button>\n                    <button onClick={this.handleChangeState} value={3}>EXPRESSAO REGULAR</button>\n                </div>\n                {state}\n                <div className=\"container-desenvolvimento\">\n                    <button className=\"emDesenvolvimento\" onClick={this.handlePlostTwist}>Não Clicar</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport Main from './pages/main/main'\n\nReactDOM.render(<Main/>, document.getElementById('root'))"],"sourceRoot":""}